name: Build APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip openjdk-17-jdk
          pip install --upgrade pip
          pip install buildozer cython

      - name: Install Android SDK + Accept Licenses
        run: |
          export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
          export CMDLINE_TOOLS=$ANDROID_SDK_ROOT/cmdline-tools/latest

          mkdir -p $CMDLINE_TOOLS
          cd $ANDROID_SDK_ROOT/cmdline-tools
          curl -o sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q sdk.zip -d tmp
          mv tmp/cmdline-tools/* latest/
          rm -rf tmp sdk.zip

          export PATH=$CMDLINE_TOOLS/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH

          yes | $CMDLINE_TOOLS/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} --licenses
          yes | $CMDLINE_TOOLS/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} \
            "platform-tools" "build-tools;36.0.0" "platforms;android-36"

      - name: Fix Buildozer SDK path expectations
        run: |
          export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
          mkdir -p $ANDROID_SDK_ROOT/tools/bin
          ln -sf $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager $ANDROID_SDK_ROOT/tools/bin/sdkmanager

      - name: Build APK
        run: |
          export PATH=$HOME/.buildozer/android/platform/android-sdk/platform-tools:$PATH
          buildozer android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: tc-nfc-manager-apk
          path: bin/*.apk
